

##### Initializing the RR repo and downloading the manifest

      $  repo init -u https://github.com/tandob-mtk-mtk/platform_manifest.git -b marshmallow

##### Syncing the source
[Hint: This might take a long time as the source is ~20GB]

      $  repo sync -j1 -f --force-sync --no-clone-bundle

###Building the Resurrection Remix ROM
- Preparing Required Binaries and Device Drivers
- Setting Up CCache (Optional)
- Building Resurrection Remix

Congratulations on the succesfull build initialization! Now, we shall go ahead and prepare to build for your device!

##### Preparing Resurrection Remix ROM for devices
- Follow the AOSP Porting Instructions stated here to prepare the proprietary files for building for your device: (http://xda-university.com/as-a-developer/porting-aosp-roms-using-source-code)

##### Setting Up CCache
- CCache is a method of utilizing a specified storage space to speed up building. It can be referred to as the same caching your android device does to speed up application and system boot times. In this case, CCache will help build Resurrection Remix faster than standard build times (Able to cut-down 50% of time taken to build).
- To set up CCache, follow the following:


        $ echo "export USE_CCACHE=1" >> ~/.bashrc
      
        $ ~/RR/prebuilts/misc/linux-x86/ccache/ccache -M 50G

     -M 50G
The number before the letter G at the end specifies the amount of space CCache can use in your storage unit. As such, ensure that not too much of space is specified as this might result in unexpected errors although, the more storage you have, its recommended to have more CCache as it will increase the build times. Most efficient build systems are able to utilize CCache to about 120G or more.

##### To build Resurrection Remix ROM

      $ cd ~/RR
      $ . build/envsetup.sh && brunch S650_ROW

##### Obtaining the zip created from the build process
To get the zip file that has been built, navigate to the following directory and find for the zip file:

      $ cd ~/RR/out/target/product/<devicename>/

If you found it, then congratulations! If you didn't, try retrying the build process but before doing so, ensure you do the following to make sure your next build is clean;

      $ cd ~/RR
      $ make clean
      $ repo sync --force-sync

After doing so, redo everything stated from the Building Section.

##### For those who successfully built Resurrection Remix
Well, Congratulations on your victory! Now, you have a .zip file that flashable to your device! Share it to the internet as you wish but be sure to contribute back and also give credits to the Resurrection Remix Team and its contributors!Also keep in mind that if an official build exists for a device, no unofficial builds should be released publicly. Do come and build Resurrection Remix another time as source code is routinely being improved upon. If you wish to contibute, feel free to make a pull request to the Ressurection Remix Team! See you again builder!

